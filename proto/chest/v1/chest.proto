syntax = "proto3";
package chest.v1;

import "google/protobuf/timestamp.proto";

service CipherChestService {
  // Get all chests visible to a user
  rpc ListChests(ListChestsRequest) returns (ListChestsResponse) {}
  rpc GetTrymap(GetTrymapRequest) returns (GetTrymapResponse) {}
  rpc SubmitGuess(SubmitGuessRequest) returns (SubmitGuessResponse) {}
  rpc SetNotification(SetNotificationRequest) returns (SetNotificationResponse) {}
}

message ListChestsRequest {
  TgUser user = 1;
  ChestId id = 2;
  TgBot bot = 15;
}

message TgBot {
  int64 id = 1;
}

message TgUser {
  int64 id = 1;
}

// TODO: can this be unsigned?
message ChestId {
  sint64 id = 1;
}

enum ChestType {
  CHEST_TYPE_UNSPECIFIED = 0;
  CHEST_TYPE_REGULAR = 1;
  CHEST_TYPE_PROMOTIONAL = 2;
}

message ListChestsResponse {
  repeated Chest chests = 1;
  uint32 selected = 2;
  // key in map cannot be bytes or message type
  map<sint64, Chest> by_id = 3;
  ChestId selected_id = 4;
}

message Chest {
  ChestId id = 1;
  ChestType variety = 2;
  oneof state {
    // at least this many unique codes have been tried
    uint32 tried = 3;
    // user has to wait until timestamp to try again
    google.protobuf.Timestamp waiting = 4;
    // the chest is solved by someone
    string solved_by = 5;
    // the chest expired without being solved
    google.protobuf.Timestamp expired = 6;
  }
  bool selected = 15;
}

message GetTrymapRequest {
  ChestId id = 1;
  TgBot bot = 15;
}

message GetTrymapResponse {
  // bitmap of attempts made by all users
  // zero length unless it is the current chest
  bytes trymap = 1;
}

message SubmitGuessRequest {
  ChestId id = 1;
  uint32 guess = 2;
  TgBot bot = 15;
}

// Should a conflict be a different state or an error status?
message SubmitGuessResponse {
  bool won = 1;
}

message SetNotificationRequest {
  ChestId id = 1;
  bool enable_notificatons = 2;
  TgBot bot = 15;
}
message SetNotificationResponse {}

// Bad user = NOT_FOUND || PERMISSION_DENIED
// Not accepted chatbot = FAILED_PRECONDITION
// Attempted to submit before timestamp = RESOURCE_EXHAUSTED
